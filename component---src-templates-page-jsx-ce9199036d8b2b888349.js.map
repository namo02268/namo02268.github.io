{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./src/templates/page.jsx","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/components/Tag.jsx"],"names":["MDXRenderer","require","module","FlexContainer","query","TagContainer","Page","page","data","mdx","css","frontmatter","date","title","tags","map","tag","tagFor","body","React","useMDXComponents","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","StyledTag","Tag"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,2JCATG,EAAgB,YAAO,MAAP,qBAAH,qJAcNC,EAAK,aAaZC,EAAe,YAAO,MAAP,qBAAH,wC,mEAoCHC,UAhCF,SAAC,GAA6B,IAAdC,EAAa,EAA1BC,KAAQC,IACpB,OACI,YAAC,IAAD,KACI,YAACN,EAAD,CACIO,IAAKA,eAGL,uBACI,sBAAKH,EAAKI,YAAYC,MACtB,sBAAKL,EAAKI,YAAYE,OAEtB,mBAAKH,IAAG,GAOJ,YAACL,EAAD,KACKE,EAAKI,YAAYG,KAAKC,KAAI,SAAAC,GAAG,OAAI,YAAC,IAAD,CAAKC,OAAQD,SAIvD,YAAC,cAAD,KACKT,EAAKW,W,6xDChE9B,IAAMC,EAAQlB,EAAd,Q,EACkCA,EAAQ,QAAlCmB,E,EAAAA,iBAAkBX,E,EAAAA,IAClBY,EAAgBpB,EAAQ,QAAxBoB,YAERnB,UAAiB,SAAqB,GAKlC,IAJFoB,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBN,EAAtB,GACMO,EAAWN,EAFhB,GAKKO,EAAMT,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMU,EAAS,GAGbV,MAHa,EAIbV,OAJF,GAQMqB,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAOL,EAAA,mBAA2BI,WAAYG,GAA9C,M,4EC/BIS,EAAY,YAAO,MAAP,qBAAH,2KAuBAC,IARH,SAACX,GACT,OACI,YAACU,EAAD,KACI,qBAAIV,EAAMR","file":"component---src-templates-page-jsx-ce9199036d8b2b888349.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\r\nimport { css } from \"@emotion/core\";\r\nimport Tag from \"../components/Tag\";\r\n\r\n\r\nconst FlexContainer = styled(\"div\")`\r\n    color: #EEEEEE;\r\n    display: flex;\r\n    width: 810px;\r\n    margin: 0 auto 0 auto;\r\n    p{\r\n        letter-spacing: 0.04rem;\r\n    }\r\n\r\n    @media (max-width: 900px){\r\n        width: 90%;\r\n    }\r\n`;\r\n\r\nexport const query = graphql`\r\nquery ($title: String!) {\r\n    mdx(frontmatter: {title: {eq: $title}}) {\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"YYYY/MM/DD\")\r\n        tags\r\n      }\r\n      body\r\n    }\r\n  }\r\n`;\r\n\r\nconst TagContainer = styled(\"div\")`\r\n    display: flex;\r\n`;\r\n\r\nconst Page = ({ data: { mdx: page } }) => {\r\n    return (\r\n        <Layout>\r\n            <FlexContainer\r\n                css={css`\r\n                `}\r\n            >\r\n                <div>\r\n                    <h4>{page.frontmatter.date}</h4>\r\n                    <h1>{page.frontmatter.title}</h1>\r\n\r\n                    <div css={css`\r\n                        p{\r\n                        color: #EEEEEE;\r\n                        }\r\n                        padding: 0 0 30px 0rem;\r\n                        /** */\r\n                    `}>\r\n                        <TagContainer>\r\n                            {page.frontmatter.tags.map(tag => <Tag tagFor={tag} />)}\r\n                        </TagContainer>\r\n                    </div>\r\n\r\n                    <MDXRenderer>\r\n                        {page.body}\r\n                    </MDXRenderer>\r\n                </div>\r\n            </FlexContainer>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Page;\r\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledTag = styled(\"div\")`\r\n    background-color: #035b96;\r\n    color: #4ecca3;\r\n    border-radius: 0.5em;\r\n    padding: 0.2rem 0.4rem;\r\n    margin-right: 1rem;\r\n    whitespace: no-wrap;\r\n    font-size: 85%;\r\n\r\n    p{\r\n        margin:0;\r\n    }\r\n\r\n`;\r\n\r\nconst Tag = (props) => {\r\n    return (\r\n        <StyledTag>\r\n            <p>{props.tagFor}</p>\r\n        </StyledTag>\r\n    );\r\n}\r\n\r\nexport default Tag;\r\n"],"sourceRoot":""}